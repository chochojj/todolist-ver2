{"version":3,"file":"static/js/636.d3d47b83.chunk.js","mappings":"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","sources":["components/diary/DiaryForm.js","components/diary/DiaryList.js","components/diary/DiaryView.js","pages/Diary.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { theme } from \"../../style/theme\";\r\n\r\nconst FormDiary = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  input {\r\n    width: 90%;\r\n    padding: 10px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: none;\r\n    border-bottom: 1px;\r\n    color: ${({ theme }) => theme.color};\r\n    background-color: ${({ theme }) => theme.greenInput};\r\n  }\r\n\r\n  input::placeholder {\r\n    color: ${({ theme }) => theme.color};\r\n  }\r\n\r\n  textarea {\r\n    width: 90%;\r\n    height: 300px;\r\n    padding: 10px;\r\n    margin: 10px 0px 10px 0px;\r\n    border: none;\r\n    border-bottom: 1px;\r\n    color: ${({ theme }) => theme.color};\r\n    background-color: ${({ theme }) => theme.orangeTextarea};\r\n    resize: none;\r\n  }\r\n\r\n  textarea::placeholder {\r\n    color: ${({ theme }) => theme.color};\r\n  }\r\n\r\n  .btn {\r\n    width: 90%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-around;\r\n  }\r\n  .btn > div {\r\n    display: inline-block;\r\n    flex: 1;\r\n    font-size: 0.9em;\r\n  }\r\n  button {\r\n    flex: 1;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: right;\r\n    margin-right: 10px;\r\n    font-size: 1em;\r\n    border: none;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    font-weight: bold;\r\n    color: #a96650;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction DiaryForm({\r\n  inputTitle,\r\n  setInputTitle,\r\n  inputContent,\r\n  setInputContent,\r\n  emptyInput,\r\n  handleSubmit,\r\n}) {\r\n  return (\r\n    <FormDiary onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"제목\"\r\n        value={inputTitle}\r\n        onChange={(e) => setInputTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"내용\"\r\n        value={inputContent}\r\n        onChange={(e) => setInputContent(e.target.value)}\r\n      />\r\n      <div className=\"btn\">\r\n        {emptyInput && <div>입력칸이 비었습니다</div>}\r\n        <button type=\"submit\">작성</button>\r\n      </div>\r\n    </FormDiary>\r\n  );\r\n}\r\nexport default DiaryForm;\r\n","import styled from \"styled-components\";\r\n\r\nconst FormUl = styled.ul`\r\n  width: 90%;\r\n  padding: 0;\r\n  height: 380px;\r\n  overflow: auto;\r\n\r\n  li {\r\n    height: 38px;\r\n    background-color: rgba(250, 233, 211, 0.3);\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n    margin-bottom: 7px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n  }\r\n  ::-webkit-scrollbar {\r\n    position: absolute;\r\n    width: 8px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: rgba(1, 107, 8, 0.1);\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background-color: rgba(1, 107, 8, 0.2);\r\n  }\r\n  .title {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  button {\r\n    /* font-size: 1vh; */\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-left: 10px;\r\n    padding: 0;\r\n    font-weight: bold;\r\n    justify-self: center;\r\n    align-self: center;\r\n    border: none;\r\n    background-color: transparent;\r\n  }\r\n  button:hover {\r\n    cursor: pointer;\r\n    background-color: rgba(133, 86, 40, 0.7);\r\n    color: white;\r\n  }\r\n`;\r\n\r\nfunction DiaryList({\r\n  diaries,\r\n  handleDelete,\r\n  handleSelect,\r\n  selectedDiaryIndex,\r\n}) {\r\n  return (\r\n    <FormUl>\r\n      {diaries.map((diary, index) => (\r\n        <li\r\n          key={index}\r\n          className={selectedDiaryIndex === index ? \"selected\" : \"\"}\r\n        >\r\n          <div className=\"title\" onClick={() => handleSelect(index)}>\r\n            <span>{diary.title}</span>\r\n            <span>{diary.date}</span>{\" \"}\r\n          </div>\r\n          <button onClick={() => handleDelete(index)}>X</button>\r\n        </li>\r\n      ))}\r\n    </FormUl>\r\n  );\r\n}\r\nexport default DiaryList;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"../../style/theme\";\r\n\r\nconst ViewDiary = styled.section`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .title {\r\n    width: 90%;\r\n    padding: 10px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: none;\r\n    border-bottom: 1px;\r\n    background-color: rgba(254, 194, 194, 0.15);\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n  }\r\n  .title span:first-child {\r\n    font-weight: bold;\r\n  }\r\n  input {\r\n    width: 80%;\r\n    height: 15px;\r\n    border: none;\r\n    background: transparent;\r\n    outline: none;\r\n    color: ${({ theme }) => theme.color};\r\n  }\r\n  .content {\r\n    width: 90%;\r\n    height: 300px;\r\n    padding: 10px;\r\n    margin: 10px 0px 10px 0px;\r\n    border: none;\r\n    border-bottom: 1px;\r\n    background-color: rgba(254, 194, 194, 0.15);\r\n    resize: none;\r\n    white-space: pre-wrap;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    height: 300px;\r\n    border: none;\r\n    background: transparent;\r\n    resize: none;\r\n    color: ${({ theme }) => theme.color};\r\n  }\r\n  textarea:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .btn {\r\n    width: 92%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n  }\r\n  button {\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: right;\r\n    font-size: 1em;\r\n    border: none;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    font-weight: bold;\r\n    color: #a96650;\r\n    cursor: pointer;\r\n  }\r\n  .green {\r\n    color: rgba(43, 186, 109, 1);\r\n  }\r\n`;\r\n\r\nfunction DiaryView({\r\n  title,\r\n  content,\r\n  date,\r\n  setSelectedDiaryIndex,\r\n  diaries,\r\n  setDiaries,\r\n  selectedDiaryIndex,\r\n}) {\r\n  const [editableTitle, setEditableTitle] = useState(title);\r\n  const [editableContent, setEditableContent] = useState(content);\r\n  const [editable, setEditable] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleTitleChange = (e) => {\r\n    setEditableTitle(e.target.value);\r\n  };\r\n\r\n  const handleContentChange = (e) => {\r\n    setEditableContent(e.target.value);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!editableTitle || !editableContent) {\r\n      setErrorMessage(\"제목과 내용을 입력해주세요.\");\r\n      return;\r\n    }\r\n    const newDiaries = [...diaries];\r\n    newDiaries[selectedDiaryIndex] = {\r\n      title: editableTitle,\r\n      content: editableContent,\r\n      date: date,\r\n    };\r\n    setDiaries(newDiaries);\r\n    setEditable(false);\r\n    setErrorMessage(\"\"); // 에러 메시지 초기화\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setSelectedDiaryIndex(null);\r\n  };\r\n\r\n  return (\r\n    <ViewDiary>\r\n      <div className=\"title\">\r\n        {editable ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editableTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n        ) : (\r\n          <span>{editableTitle}</span>\r\n        )}\r\n        <span>{date}</span>\r\n      </div>\r\n      <div className=\"content\">\r\n        {editable ? (\r\n          <textarea value={editableContent} onChange={handleContentChange} />\r\n        ) : (\r\n          <div>{editableContent}</div>\r\n        )}\r\n      </div>\r\n      <div className=\"btn\">\r\n        {editable ? (\r\n          <button className=\"green\" onClick={handleSave}>\r\n            수정완료\r\n          </button>\r\n        ) : (\r\n          <button onClick={() => setEditable(true)}>수정</button>\r\n        )}\r\n        <div className=\"error\">{errorMessage}</div>\r\n        <button onClick={handleBack}>목록보기</button>\r\n      </div>\r\n    </ViewDiary>\r\n  );\r\n}\r\nexport default DiaryView;\r\n","import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"../style/theme\";\r\nimport DiaryForm from \"../components/diary/DiaryForm\";\r\nimport DiaryList from \"../components/diary/DiaryList\";\r\nimport DiaryView from \"../components/diary/DiaryView\";\r\n\r\nconst TodayLog = styled.div`\r\n  width: 800px;\r\n  height: 500px;\r\n  background-color: ${({ theme }) => theme.containerBackground};\r\n  color: ${({ theme }) => theme.color};\r\n  display: flex;\r\n  padding: 20px 0 0 0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\r\n\r\n  .header {\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px 0px;\r\n    padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .date {\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n  }\r\n  .date > span:first-child {\r\n    margin-left: 30px;\r\n  }\r\n  .date > span::selection {\r\n    color: orange;\r\n  }\r\n  .day {\r\n    margin-left: 5px;\r\n  }\r\n  .day::selection {\r\n    color: orange;\r\n  }\r\n`;\r\n\r\nconst AddDiaryButton = styled.button`\r\n  width: 130px;\r\n  height: 32px;\r\n  text-align: center;\r\n  font-size: 1em;\r\n  border: none;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  font-weight: bold;\r\n  margin-right: 20px;\r\n  color: ${({ theme }) => theme.orangeText};\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Diary() {\r\n  const [diaries, setDiaries] = useState(() => {\r\n    const storedDiaries = localStorage.getItem(\"diaries\");\r\n    return storedDiaries ? JSON.parse(storedDiaries) : [];\r\n  });\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputContent, setInputContent] = useState(\"\");\r\n  const [emptyInput, setEmptyInput] = useState(false);\r\n  const [selectedDiaryIndex, setSelectedDiaryIndex] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedDiaries = JSON.parse(localStorage.getItem(\"diaries\"));\r\n    if (storedDiaries) {\r\n      setDiaries(storedDiaries);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"diaries\", JSON.stringify(diaries));\r\n  }, [diaries]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!inputTitle || !inputContent) {\r\n      setEmptyInput(true);\r\n      return;\r\n    }\r\n    const currentDate = new Date().toLocaleDateString();\r\n    setDiaries([\r\n      ...diaries,\r\n      { title: inputTitle, content: inputContent, date: currentDate },\r\n    ]);\r\n    setInputTitle(\"\");\r\n    setInputContent(\"\");\r\n    setEmptyInput(false);\r\n    setShowForm(false);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const newDiaries = [...diaries];\r\n    if (selectedDiaryIndex === index) {\r\n      setSelectedDiaryIndex(null);\r\n    } else if (selectedDiaryIndex > index) {\r\n      setSelectedDiaryIndex(selectedDiaryIndex - 1);\r\n    }\r\n    newDiaries.splice(index, 1);\r\n    setDiaries(newDiaries);\r\n  };\r\n\r\n  const handleSelect = (index) => {\r\n    setSelectedDiaryIndex(index);\r\n  };\r\n\r\n  const handleAddDiaryClick = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n  const dayName = today.toLocaleString(\"ko-KR\", { weekday: \"long\" });\r\n\r\n  return (\r\n    <TodayLog>\r\n      <div className=\"header\">\r\n        <div className=\"date\">\r\n          <span>{dateString}</span>\r\n          <span className=\"day\">{dayName}</span>\r\n        </div>\r\n        {!showForm && selectedDiaryIndex === null ? (\r\n          <AddDiaryButton onClick={handleAddDiaryClick}>\r\n            오늘의 일기 작성\r\n          </AddDiaryButton>\r\n        ) : null}\r\n      </div>\r\n      {showForm ? (\r\n        <DiaryForm\r\n          inputTitle={inputTitle}\r\n          setInputTitle={setInputTitle}\r\n          inputContent={inputContent}\r\n          setInputContent={setInputContent}\r\n          emptyInput={emptyInput}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      ) : null}\r\n      {selectedDiaryIndex === null && !showForm && (\r\n        <DiaryList\r\n          diaries={diaries}\r\n          handleDelete={handleDelete}\r\n          handleSelect={handleSelect}\r\n          selectedDiaryIndex={selectedDiaryIndex}\r\n        />\r\n      )}\r\n      {selectedDiaryIndex !== null && (\r\n        <DiaryView\r\n          title={diaries[selectedDiaryIndex].title}\r\n          content={diaries[selectedDiaryIndex].content}\r\n          date={diaries[selectedDiaryIndex].date}\r\n          setSelectedDiaryIndex={setSelectedDiaryIndex}\r\n          selectedDiaryIndex={selectedDiaryIndex}\r\n          diaries={diaries}\r\n          setDiaries={setDiaries}\r\n        />\r\n      )}\r\n    </TodayLog>\r\n  );\r\n}\r\n\r\nexport default Diary;\r\n"],"names":["FormDiary","styled","theme","color","greenInput","orangeTextarea","inputTitle","setInputTitle","inputContent","setInputContent","emptyInput","handleSubmit","onSubmit","type","placeholder","value","onChange","e","target","className","FormUl","diaries","handleDelete","handleSelect","selectedDiaryIndex","map","diary","index","onClick","title","date","ViewDiary","content","setSelectedDiaryIndex","setDiaries","useState","editableTitle","setEditableTitle","editableContent","setEditableContent","editable","setEditable","errorMessage","setErrorMessage","newDiaries","TodayLog","containerBackground","AddDiaryButton","orangeText","storedDiaries","localStorage","getItem","JSON","parse","setEmptyInput","showForm","setShowForm","useEffect","setItem","stringify","today","Date","dateString","toLocaleString","year","month","day","dayName","weekday","preventDefault","currentDate","toLocaleDateString","splice"],"sourceRoot":""}